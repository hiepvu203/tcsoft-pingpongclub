@model IEnumerable<tcsoft_pingpongclub.Models.Tournament>

@{
    ViewData["Title"] = "Danh sách giải đấu";
}
<div class="header-container">
    <h2>GIẢI ĐẤU BÓNG BÀN</h2>
</div>
<div class="d-flex justify-content-between mb-4">
    <!-- Form Lọc Rank -->
    <form method="get" action="@Url.Action("Index")" class="me-auto">
        <select name="selectedLevel" class="form-control">
            <option value="">-- Chọn cấp bậc --</option>
            @foreach (var level in ViewBag.Levels)
            {
                var isSelected = level.IdLevel == ViewBag.SelectedLevel ? "selected" : "";
                <option value="@level.IdLevel" selected="@isSelected">@level.LevelName</option>
            }
        </select>
        <button type="submit" class="btn btn-primary mt-2">Lọc theo Rank</button>
    </form>

    <!-- Form Tìm kiếm -->
    <form method="get" action="@Url.Action("Index")" class="ms-auto">
        <input type="text" name="searchTerm" value="@ViewBag.SearchTerm" class="form-control" placeholder="Tìm kiếm theo tên giải đấu" />
        <button type="submit" class="btn btn-primary mt-2">Tìm kiếm</button>
    </form>
</div>

<div class="tournament-list">
    @foreach (var item in Model)
    {
        <div class="tournament-item">
            <a asp-action="Details" asp-route-id="@item.IdTournament" asp-route-searchTerm="@ViewBag.SearchTerm">
                <img src="~/anhGiaidau/@(item.UrlImage ?? "defaultImage.jpg")" alt="Tournament Image" class="img-thumbnail" />
                <h4>@Html.DisplayFor(modelItem => item.TournamentName)</h4>
                <hr class="title-line" />
                <p class="tournament-description">@Html.DisplayFor(modelItem => item.Infor)</p>
            </a>
        </div>
    }
</div>

<div class="text-center mt-4">
    <!-- Hiển thị phân trang -->
    <ul class="pagination">
        @if (ViewBag.CurrentPage > 1)
        {
            <li class="page-item">
                <a class="page-link" href="@Url.Action("Index", new { page = 1, searchTerm = ViewBag.SearchTerm })">Trang đầu</a>
            </li>
            <li class="page-item">
                <a class="page-link" href="@Url.Action("Index", new { page = ViewBag.CurrentPage - 1, searchTerm = ViewBag.SearchTerm })">Trang trước</a>
            </li>
        }

        @for (int i = 1; i <= ViewBag.TotalPages; i++)
        {
            <li class="page-item @(i == ViewBag.CurrentPage ? "active" : "")">
                <a class="page-link" href="@Url.Action("Index", new { page = i, searchTerm = ViewBag.SearchTerm })">@i</a>
            </li>
        }

        @if (ViewBag.CurrentPage < ViewBag.TotalPages)
        {
            <li class="page-item">
                <a class="page-link" href="@Url.Action("Index", new { page = ViewBag.CurrentPage + 1, searchTerm = ViewBag.SearchTerm })">Trang sau</a>
            </li>
            <li class="page-item">
                <a class="page-link" href="@Url.Action("Index", new { page = ViewBag.TotalPages, searchTerm = ViewBag.SearchTerm })">Trang cuối</a>
            </li>
        }
    </ul>
</div>

<style>
    body {
        font-family: Arial, sans-serif;
        background-color: salmon;
        margin: 20px;
    }

    .header-container {
        display: flex;
        flex-direction: column;
        align-items: center;
        margin-bottom: 20px;
    }

        .header-container h2 {
            background-color: deeppink;
            color: white;
            padding: 10px 20px;
            border-radius: 5px;
            margin-bottom: 10px;
        }

    .tournament-list {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
        grid-gap: 20px;
    }

    .tournament-item {
        background-color: white;
        border-radius: 8px;
        box-shadow: 0 2px 10px rgba(0, 10, 0, 0.1);
        padding: 20px;
        text-align: center;
        transition: transform 0.5s ease;
        border: 2px solid yellow;
    }

        .tournament-item:hover {
            transform: translateY(-5px);
            background-color: aqua;
        }

        .tournament-item a {
            color: inherit;
            text-decoration: none;
        }

    .img-thumbnail {
        border: 2px solid #007bff;
        border-radius: 5px;
        max-width: 100%;
        height: auto;
    }

    .tournament-description {
        display: -webkit-box;
        -webkit-line-clamp: 2;
        -webkit-box-orient: vertical;
        overflow: hidden;
        text-overflow: ellipsis;
        height: 3em;
        line-height: 1.5;
    }

    /* Add a horizontal line between the title and the description */
    .title-line {
        border: 1px solid #007bff;
        width: 80%;
        margin: 10px auto;
    }

    .pagination {
        display: flex;
        justify-content: center;
        list-style: none;
        padding-left: 0;
    }

        .pagination li {
            margin: 0 5px;
        }

        .pagination .page-link {
            color: #007bff;
            text-decoration: none;
        }

        .pagination .active .page-link {
            background-color: #007bff;
            color: white;
        }

        .pagination .page-item.disabled .page-link {
            color: #ccc;
        }

    .text-center {
        text-align: center;
    }

    .mb-4 {
        margin-bottom: 1.5rem;
    }
</style>
